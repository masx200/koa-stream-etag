{"version":3,"file":"index.cjs","sources":["concatArrayBuffer.ts","ReadableStreamSmallerThanLimitToBuffer.ts","getResponseEntity.ts","setEtag.ts","index.ts"],"sourcesContent":["\"use strict\";\n\nexport async function concatArrayBuffer(\n    array: Uint8Array[]\n): Promise<Uint8Array> {\n    return Buffer.concat(array);\n}\n","\"use strict\";\n\nimport { concatArrayBuffer } from \"./concatArrayBuffer\";\n\nexport async function ReadableStreamSmallerThanLimitToBuffer(\n    readable: ReadableStream<Uint8Array>,\n    sizelimit: number\n): Promise<Uint8Array> {\n    const reader = readable.getReader();\n    try {\n        let count = 0;\n        const buffers: Uint8Array[] = [];\n        while (true) {\n            if (count > sizelimit) {\n                throw new Error(\"stream size grater than limit\");\n            }\n            const result = await reader.read();\n\n            if (result.done) {\n                return concatArrayBuffer(buffers);\n            } else {\n                buffers.push(result.value);\n                count += result.value.length;\n            }\n        }\n    } catch (error) {\n        throw error;\n    } finally {\n        reader.cancel();\n        reader.releaseLock();\n    }\n}\n","\"use strict\";\nimport Stream from \"stream\";\nimport * as koa from \"koa\";\nimport { ReadableStreamSmallerThanLimitToBuffer } from \"./ReadableStreamSmallerThanLimitToBuffer\";\n\nconst promisify = require(\"util\").promisify;\nexport const stat = promisify(fs.stat);\nimport fs from \"fs\";\nexport async function getResponseEntity(\n    ctx: koa.ParameterizedContext<koa.DefaultState, koa.DefaultContext, any>,\n    sizelimit: number\n) {\n    // no body\n    const body = ctx.body;\n    if (!body || ctx.response.get(\"etag\")) {\n        return;\n    }\n\n    // type\n    const status = (ctx.status / 100) | 0;\n\n    // 2xx\n    if (status !== 2) {\n        return;\n    }\n\n    if (body instanceof Stream) {\n        if (!(\"path\" in body)) {\n            //@ts-ignore\n            const ReadableStream = Stream.Readable.toWeb(body);\n            const [stream1, stream2] = ReadableStream.tee();\n            //@ts-ignore\n            ctx.body = Stream.Readable.fromWeb(stream1);\n\n            try {\n                return await ReadableStreamSmallerThanLimitToBuffer(\n                    stream2,\n                    sizelimit\n                );\n            } catch (error) {\n                return;\n            }\n        } else {\n            // @ts-ignore\n            return await stat(body.path);\n        }\n    } else if (typeof body === \"string\" || Buffer.isBuffer(body)) {\n        return body;\n    } else {\n        return JSON.stringify(body);\n    }\n}\n","\"use strict\";\nimport calculate from \"etag\";\nimport * as koa from \"koa\";\n\nexport function setEtag(\n    ctx: koa.ParameterizedContext<koa.DefaultState, koa.DefaultContext, any>,\n    entity: string | Buffer | calculate.StatsLike | undefined,\n    options: calculate.Options | undefined\n) {\n    if (!entity) {\n        return;\n    }\n\n    ctx.response.etag = calculate(entity, options);\n}\n","\"use strict\";\n\n/**\n * Module dependencies.\n */\n\nimport type { Options } from \"etag\";\nimport * as koa from \"koa\";\nimport { getResponseEntity } from \"./getResponseEntity\";\nimport { setEtag } from \"./setEtag\";\n\nexport default function etag(\n    options?: Options & { sizelimit?: number | undefined }\n): koa.Middleware {\n    const sizelimit = options?.sizelimit || Default_sizelimit;\n    return async function etag(ctx, next) {\n        await next();\n        const length = ctx.response.get(\"content-length\");\n        if (length && Number(length) > sizelimit) {\n            return;\n        }\n        const entity = await getResponseEntity(ctx, sizelimit);\n        setEtag(ctx, entity, options);\n    };\n}\nconst Default_sizelimit = 1000 * 1024;\n"],"names":["fs","Stream","calculate"],"mappings":"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"}